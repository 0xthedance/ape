:mod:`ape.exceptions`
=====================

.. py:module:: ape.exceptions




.. raw:: html

   <h3>Module Contents</h3>


-----------


.. py:exception:: ApeException(message)

   Bases: :py:obj:`Exception`

   An exception raised by ape.

   .. py:method:: __init__(self, message)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: AccountsError(message)

   Bases: :py:obj:`ApeException`

   Raised when a problem occurs when using accounts.




.. py:exception:: AliasAlreadyInUseError(alias: str)

   Bases: :py:obj:`AccountsError`

   Raised when attempting to add an account using an alias
   that already maps to another account.

   .. py:method:: __init__(self, alias: str)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: SignatureError(message)

   Bases: :py:obj:`AccountsError`

   Raised when there are issues with signing.




.. py:exception:: ContractError(message)

   Bases: :py:obj:`ApeException`

   Raised when issues occur when interacting with a contract
   (calls or transactions).




.. py:exception:: ArgumentsLengthError

   Bases: :py:obj:`ContractError`

   Raised when calling a contract method with the wrong number of arguments.

   .. py:method:: __init__(self)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: DecodingError

   Bases: :py:obj:`ContractError`

   Raised when issues occur while decoding data from
   a contract call or transaction.

   .. py:method:: __init__(self)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: TransactionError(base_err: Optional[Exception] = None, message: Optional[str] = None, code: Optional[int] = None)

   Bases: :py:obj:`ContractError`

   Raised when issues occur related to transactions.

   .. py:method:: __init__(self, base_err: Optional[Exception] = None, message: Optional[str] = None, code: Optional[int] = None)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: VirtualMachineError(revert_message: str)

   Bases: :py:obj:`TransactionError`

   Raised when there is either an internal fault in a virtual machine
   or a contract-defined revert, such as from an assert/require statement.

   .. py:method:: __init__(self, revert_message: str)

      Initialize self.  See help(type(self)) for accurate signature.


   .. py:method:: revert_message(self)
      :property:


   .. py:method:: from_error(cls, err: Exception)
      :classmethod:

      Creates this class from the error message of the given
      error.

      This should be overridden whenever possible to handle
      provider-specific use-cases for raising this error.





.. py:exception:: OutOfGasError(code: Optional[int] = None)

   Bases: :py:obj:`TransactionError`

   Raised when detecting a transaction failed because it ran
   out of gas.

   .. py:method:: __init__(self, code: Optional[int] = None)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: ContractDeployError(base_err: Optional[Exception] = None, message: Optional[str] = None, code: Optional[int] = None)

   Bases: :py:obj:`TransactionError`

   Raised when a problem occurs when deploying a contract.




.. py:exception:: NetworkError(message)

   Bases: :py:obj:`ApeException`

   Raised when a problem occurs when using blockchain networks.




.. py:exception:: NetworkNotFoundError(network: str)

   Bases: :py:obj:`NetworkError`

   Raised when the network with the given name was not found.

   .. py:method:: __init__(self, network: str)

      Initialize self.  See help(type(self)) for accurate signature.





.. py:exception:: CompilerError(message)

   Bases: :py:obj:`ApeException`

   Raised when unable to compile.




.. py:exception:: ProjectError(message)

   Bases: :py:obj:`ApeException`

   Raised when problems occur in a project.




.. py:exception:: ConversionError(message)

   Bases: :py:obj:`ApeException`

   Raised when unable to convert a value.




.. py:exception:: ProviderError(message)

   Bases: :py:obj:`ApeException`

   Raised when a problem occurs when using providers.




.. py:exception:: ConfigError(message)

   Bases: :py:obj:`ApeException`

   Raised when a problem occurs from the configuration file.




.. py:exception:: AddressError(message)

   Bases: :py:obj:`ApeException`

   Raised when a problem occurs regarding an address.



