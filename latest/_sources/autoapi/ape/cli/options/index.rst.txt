:mod:`ape.cli.options`
======================

.. py:module:: ape.cli.options




.. raw:: html

   <h3>Module Contents</h3>

**Classes**:

.. autoapisummary::

   ape.cli.options.ApeCliContextObject
   ape.cli.options.NetworkChoice



**Functions**:

.. autoapisummary::

   ape.cli.options.verbosity_option
   ape.cli.options.ape_cli_context
   ape.cli.options.verbose_option
   ape.cli.options._require_non_existing_alias
   ape.cli.options.existing_alias_argument
   ape.cli.options.skip_confirmation_option



**Attributes**:

.. autoapisummary::

   ape.cli.options.network_option
   ape.cli.options.non_existing_alias_argument



-----------


.. py:class:: ApeCliContextObject

   A class that can be auto-imported into a plugin ``click.command()``
   via ``@ape_cli_context()``. It can help do common CLI tasks such as log
   messages to the user or abort execution.

   .. py:method:: __init__(self)


   .. py:method:: abort(msg: str, base_error: Exception = None)
      :staticmethod:





.. py:function:: verbosity_option(cli_logger)

   A decorator that adds a `--verbosity, -v` option to the decorated
   command.




.. py:function:: ape_cli_context()




.. py:class:: NetworkChoice(case_sensitive=True)

   Bases: :py:obj:`click.Choice`

   Wraps ``click.Choice`` to provide network choice defaults for the active project.

   .. py:method:: __init__(self, case_sensitive=True)


   .. py:method:: get_metavar(self, param)

      Returns the metavar default for this param if it provides one.





.. data:: network_option
   

   



.. py:function:: verbose_option(help='')




.. py:function:: _require_non_existing_alias(arg)




.. py:function:: existing_alias_argument(account_type: Optional[Type[ape.api.accounts.AccountAPI]] = None)




.. data:: non_existing_alias_argument
   

   



.. py:function:: skip_confirmation_option(help='')



